/* — Ты помнишь Додо, Попугайчика Лори и Орленка Эда?—спросила Герцогиня.—Додо считает, что
 Лори считает, что Орленок не в своем уме- Лори думает, что Додо не в своем уме. а Орленок думает, что
 Додо в здравом рассудке.
 Можешь ли ты решить эту задачу? */
DOMAINS
    имя = лори; додо; орленок
    тип = безумец; нормальный
  
    персонаж_и_тип = персонаж(имя, тип)
    персонажи_и_типы = персонаж_и_тип*
  
    имена = имя* %для поиска имени из списка
    типы = тип* %для поиска типа из списка
    
PREDICATES
    nondeterm один_из(имя, имена)
    nondeterm один_из(тип, типы)
    nondeterm один_из(персонаж_и_тип, персонажи_и_типы)
    
    nondeterm генерация_гипотезы(персонажи_и_типы)
    nondeterm сказал(имя, персонажи_и_типы)
    nondeterm проверка_высказывания(имя, персонажи_и_типы)
    nondeterm проверка_гипотезы(персонажи_и_типы)
    
CLAUSES
	один_из(Name, [Name|_]).
	один_из(Name, [_|Хвост]):-один_из(Name, Хвост).

% Додо считает, что Лори считает,что Орленок не в своем уме 
	сказал(додо, Персонажи_и_типы):-
		проверка_высказывания(лори, Персонажи_и_типы).
  
	сказал(лори, Персонажи_и_типы):- %второе высказывание лори
		один_из(персонаж(орленок, безумец), Персонажи_и_типы).
% Лори думает, что Додо не в своем уме
	сказал(лори, Персонажи_и_типы):-
		один_из(персонаж(додо, безумец), Персонажи_и_типы).
% Орленок думает, что Додо в здравом рассудке
	сказал(орленок, Персонажи_и_типы):-
		один_из(персонаж(додо, нормальный), Персонажи_и_типы).

% Генерация гипотезы    	
	генерация_гипотезы(Персонажи_и_типы):-
		Все_типы = [безумец, нормальный],
		один_из(ТипЛори, Все_типы),
		один_из(ТипДодо, Все_типы),
		один_из(ТипОрленка, Все_типы),

		%Ввод персонажей и их типов
		Лори_и_тип = персонаж(лори, ТипЛори),
		Додо_и_тип = персонаж(додо, ТипДодо),
		Орленок_и_тип = персонаж(орленок, ТипОрленка),
		Персонажи_и_типы = [Лори_и_тип, Додо_и_тип, Орленок_и_тип].

% Проверка высказывания, 
% Если нормальный то высказывание верно, 
% Если безумец то неверно
	проверка_высказывания(Имя, Персонажи_и_типы):-
		один_из(персонаж(Имя, нормальный), Персонажи_и_типы),
		сказал(Имя, Персонажи_и_типы).
	проверка_высказывания(Имя, Персонажи_и_типы):-
		один_из(персонаж(Имя, безумец), Персонажи_и_типы),
		NOT(сказал(Имя, Персонажи_и_типы)).
% Проверка гипотезы    
	проверка_гипотезы(Персонажи_и_типы):-
		проверка_высказывания(додо, Персонажи_и_типы),
%		проверка_высказывания(лори, Персонажи_и_типы),
		проверка_высказывания(орленок, Персонажи_и_типы).
GOAL 
	генерация_гипотезы(Персонажи_и_типы),
	проверка_гипотезы(Персонажи_и_типы).